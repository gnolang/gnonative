// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file gnonativetypes.proto (package land.gno.gnonative.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file gnonativetypes.proto.
 */
export const file_gnonativetypes: GenFile = /*@__PURE__*/
  fileDesc("ChRnbm9uYXRpdmV0eXBlcy5wcm90bxIVbGFuZC5nbm8uZ25vbmF0aXZlLnYxIiIKEFNldFJlbW90ZVJlcXVlc3QSDgoGcmVtb3RlGAEgASgJIhMKEVNldFJlbW90ZVJlc3BvbnNlIhIKEEdldFJlbW90ZVJlcXVlc3QiIwoRR2V0UmVtb3RlUmVzcG9uc2USDgoGcmVtb3RlGAEgASgJIiUKEVNldENoYWluSURSZXF1ZXN0EhAKCGNoYWluX2lkGAEgASgJIhQKElNldENoYWluSURSZXNwb25zZSITChFHZXRDaGFpbklEUmVxdWVzdCImChJHZXRDaGFpbklEUmVzcG9uc2USEAoIY2hhaW5faWQYASABKAkiNwoSU2V0UGFzc3dvcmRSZXF1ZXN0EhAKCHBhc3N3b3JkGAEgASgJEg8KB2FkZHJlc3MYAiABKAwiFQoTU2V0UGFzc3dvcmRSZXNwb25zZSJAChVSb3RhdGVQYXNzd29yZFJlcXVlc3QSFAoMbmV3X3Bhc3N3b3JkGAEgASgJEhEKCWFkZHJlc3NlcxgCIAMoDCIYChZSb3RhdGVQYXNzd29yZFJlc3BvbnNlIh8KHUdlbmVyYXRlUmVjb3ZlcnlQaHJhc2VSZXF1ZXN0IjAKHkdlbmVyYXRlUmVjb3ZlcnlQaHJhc2VSZXNwb25zZRIOCgZwaHJhc2UYASABKAkiRwoHS2V5SW5mbxIMCgR0eXBlGAEgASgNEgwKBG5hbWUYAiABKAkSDwoHcHViX2tleRgDIAEoDBIPCgdhZGRyZXNzGAQgASgMIiUKBENvaW4SDQoFZGVub20YASABKAkSDgoGYW1vdW50GAIgASgSIoUBCgtCYXNlQWNjb3VudBIPCgdhZGRyZXNzGAEgASgMEioKBWNvaW5zGAIgAygLMhsubGFuZC5nbm8uZ25vbmF0aXZlLnYxLkNvaW4SDwoHcHViX2tleRgDIAEoDBIWCg5hY2NvdW50X251bWJlchgEIAEoBBIQCghzZXF1ZW5jZRgFIAEoBCIUChJMaXN0S2V5SW5mb1JlcXVlc3QiTQoTTGlzdEtleUluZm9SZXNwb25zZRI2CgRrZXlzGAEgAygLMh4ubGFuZC5nbm8uZ25vbmF0aXZlLnYxLktleUluZm9SCGtleV9pbmZvIiMKE0hhc0tleUJ5TmFtZVJlcXVlc3QSDAoEbmFtZRgBIAEoCSIjChRIYXNLZXlCeU5hbWVSZXNwb25zZRILCgNoYXMYASABKAgiKQoWSGFzS2V5QnlBZGRyZXNzUmVxdWVzdBIPCgdhZGRyZXNzGAEgASgMIiYKF0hhc0tleUJ5QWRkcmVzc1Jlc3BvbnNlEgsKA2hhcxgBIAEoCCI2ChxIYXNLZXlCeU5hbWVPckFkZHJlc3NSZXF1ZXN0EhYKDm5hbWVfb3JfYmVjaDMyGAEgASgJIiwKHUhhc0tleUJ5TmFtZU9yQWRkcmVzc1Jlc3BvbnNlEgsKA2hhcxgBIAEoCCInChdHZXRLZXlJbmZvQnlOYW1lUmVxdWVzdBIMCgRuYW1lGAEgASgJIlEKGEdldEtleUluZm9CeU5hbWVSZXNwb25zZRI1CgNrZXkYASABKAsyHi5sYW5kLmduby5nbm9uYXRpdmUudjEuS2V5SW5mb1IIa2V5X2luZm8iLQoaR2V0S2V5SW5mb0J5QWRkcmVzc1JlcXVlc3QSDwoHYWRkcmVzcxgBIAEoDCJUChtHZXRLZXlJbmZvQnlBZGRyZXNzUmVzcG9uc2USNQoDa2V5GAEgASgLMh4ubGFuZC5nbm8uZ25vbmF0aXZlLnYxLktleUluZm9SCGtleV9pbmZvIjoKIEdldEtleUluZm9CeU5hbWVPckFkZHJlc3NSZXF1ZXN0EhYKDm5hbWVfb3JfYmVjaDMyGAEgASgJIloKIUdldEtleUluZm9CeU5hbWVPckFkZHJlc3NSZXNwb25zZRI1CgNrZXkYASABKAsyHi5sYW5kLmduby5nbm9uYXRpdmUudjEuS2V5SW5mb1IIa2V5X2luZm8iiAEKFENyZWF0ZUFjY291bnRSZXF1ZXN0EhYKDm5hbWVfb3JfYmVjaDMyGAEgASgJEhAKCG1uZW1vbmljGAIgASgJEhQKDGJpcDM5X3Bhc3N3ZBgDIAEoCRIQCghwYXNzd29yZBgEIAEoCRIPCgdhY2NvdW50GAUgASgNEg0KBWluZGV4GAYgASgNIk4KFUNyZWF0ZUFjY291bnRSZXNwb25zZRI1CgNrZXkYASABKAsyHi5sYW5kLmduby5nbm9uYXRpdmUudjEuS2V5SW5mb1IIa2V5X2luZm8iMAoWQWN0aXZhdGVBY2NvdW50UmVxdWVzdBIWCg5uYW1lX29yX2JlY2gzMhgBIAEoCSJmChdBY3RpdmF0ZUFjY291bnRSZXNwb25zZRI1CgNrZXkYASABKAsyHi5sYW5kLmduby5nbm9uYXRpdmUudjEuS2V5SW5mb1IIa2V5X2luZm8SFAoMaGFzX3Bhc3N3b3JkGAIgASgIIi0KGkdldEFjdGl2YXRlZEFjY291bnRSZXF1ZXN0Eg8KB2FkZHJlc3MYASABKAwiagobR2V0QWN0aXZhdGVkQWNjb3VudFJlc3BvbnNlEjUKA2tleRgBIAEoCzIeLmxhbmQuZ25vLmdub25hdGl2ZS52MS5LZXlJbmZvUghrZXlfaW5mbxIUCgxoYXNfcGFzc3dvcmQYAiABKAgiJgoTUXVlcnlBY2NvdW50UmVxdWVzdBIPCgdhZGRyZXNzGAEgASgMIlAKFFF1ZXJ5QWNjb3VudFJlc3BvbnNlEjgKDGFjY291bnRfaW5mbxgBIAEoCzIiLmxhbmQuZ25vLmdub25hdGl2ZS52MS5CYXNlQWNjb3VudCJXChREZWxldGVBY2NvdW50UmVxdWVzdBIWCg5uYW1lX29yX2JlY2gzMhgBIAEoCRIQCghwYXNzd29yZBgCIAEoCRIVCg1za2lwX3Bhc3N3b3JkGAMgASgIIhcKFURlbGV0ZUFjY291bnRSZXNwb25zZSIqCgxRdWVyeVJlcXVlc3QSDAoEcGF0aBgBIAEoCRIMCgRkYXRhGAIgASgMIh8KDVF1ZXJ5UmVzcG9uc2USDgoGcmVzdWx0GAEgASgMIjMKDVJlbmRlclJlcXVlc3QSFAoMcGFja2FnZV9wYXRoGAEgASgJEgwKBGFyZ3MYAiABKAkiIAoOUmVuZGVyUmVzcG9uc2USDgoGcmVzdWx0GAEgASgJIjgKDFFFdmFsUmVxdWVzdBIUCgxwYWNrYWdlX3BhdGgYASABKAkSEgoKZXhwcmVzc2lvbhgCIAEoCSIfCg1RRXZhbFJlc3BvbnNlEg4KBnJlc3VsdBgBIAEoCSJlCgdNc2dDYWxsEhQKDHBhY2thZ2VfcGF0aBgBIAEoCRILCgNmbmMYAiABKAkSDAoEYXJncxgDIAMoCRIpCgRzZW5kGAQgAygLMhsubGFuZC5nbm8uZ25vbmF0aXZlLnYxLkNvaW4ijAEKC0NhbGxSZXF1ZXN0Eg8KB2dhc19mZWUYASABKAkSEgoKZ2FzX3dhbnRlZBgCIAEoEhIMCgRtZW1vGAMgASgJEhYKDmNhbGxlcl9hZGRyZXNzGAQgASgMEjIKBG1zZ3MYBSADKAsyHi5sYW5kLmduby5nbm9uYXRpdmUudjEuTXNnQ2FsbFIETXNncyI8CgxDYWxsUmVzcG9uc2USDgoGcmVzdWx0GAEgASgMEgwKBGhhc2gYAiABKAwSDgoGaGVpZ2h0GAMgASgSIkoKB01zZ1NlbmQSEgoKdG9fYWRkcmVzcxgBIAEoDBIrCgZhbW91bnQYAiADKAsyGy5sYW5kLmduby5nbm9uYXRpdmUudjEuQ29pbiKMAQoLU2VuZFJlcXVlc3QSDwoHZ2FzX2ZlZRgBIAEoCRISCgpnYXNfd2FudGVkGAIgASgSEgwKBG1lbW8YAyABKAkSFgoOY2FsbGVyX2FkZHJlc3MYBCABKAwSMgoEbXNncxgFIAMoCzIeLmxhbmQuZ25vLmdub25hdGl2ZS52MS5Nc2dTZW5kUgRNc2dzIiwKDFNlbmRSZXNwb25zZRIMCgRoYXNoGAEgASgMEg4KBmhlaWdodBgCIAEoEiInCgZNc2dSdW4SDwoHcGFja2FnZRgBIAEoCRIMCgRzZW5kGAIgASgJIooBCgpSdW5SZXF1ZXN0Eg8KB2dhc19mZWUYASABKAkSEgoKZ2FzX3dhbnRlZBgCIAEoEhIMCgRtZW1vGAMgASgJEhYKDmNhbGxlcl9hZGRyZXNzGAQgASgMEjEKBG1zZ3MYBSADKAsyHS5sYW5kLmduby5nbm9uYXRpdmUudjEuTXNnUnVuUgRNc2dzIjsKC1J1blJlc3BvbnNlEg4KBnJlc3VsdBgBIAEoCRIMCgRoYXNoGAIgASgMEg4KBmhlaWdodBgDIAEoEiIhCg5NYWtlVHhSZXNwb25zZRIPCgd0eF9qc29uGAEgASgJImIKDVNpZ25UeFJlcXVlc3QSDwoHdHhfanNvbhgBIAEoCRIPCgdhZGRyZXNzGAIgASgMEhYKDmFjY291bnRfbnVtYmVyGAMgASgEEhcKD3NlcXVlbmNlX251bWJlchgEIAEoBCIxCg5TaWduVHhSZXNwb25zZRIfCg5zaWduZWRfdHhfanNvbhgBIAEoCVIHdHhfanNvbiKTAQoSRXN0aW1hdGVHYXNSZXF1ZXN0Eg8KB3R4X2pzb24YASABKAkSDwoHYWRkcmVzcxgCIAEoDBIXCg9zZWN1cml0eV9tYXJnaW4YAyABKA0SEQoJdXBkYXRlX3R4GAQgASgIEhYKDmFjY291bnRfbnVtYmVyGAUgASgEEhcKD3NlcXVlbmNlX251bWJlchgGIAEoBCI6ChNFc3RpbWF0ZUdhc1Jlc3BvbnNlEg8KB3R4X2pzb24YASABKAkSEgoKZ2FzX3dhbnRlZBgCIAEoEiI7ChhCcm9hZGNhc3RUeENvbW1pdFJlcXVlc3QSHwoOc2lnbmVkX3R4X2pzb24YASABKAlSB3R4X2pzb24iSQoZQnJvYWRjYXN0VHhDb21taXRSZXNwb25zZRIOCgZyZXN1bHQYASABKAwSDAoEaGFzaBgCIAEoDBIOCgZoZWlnaHQYAyABKBIiKQoWQWRkcmVzc1RvQmVjaDMyUmVxdWVzdBIPCgdhZGRyZXNzGAEgASgMIjEKF0FkZHJlc3NUb0JlY2gzMlJlc3BvbnNlEhYKDmJlY2gzMl9hZGRyZXNzGAEgASgJIjIKGEFkZHJlc3NGcm9tQmVjaDMyUmVxdWVzdBIWCg5iZWNoMzJfYWRkcmVzcxgBIAEoCSIsChlBZGRyZXNzRnJvbUJlY2gzMlJlc3BvbnNlEg8KB2FkZHJlc3MYASABKAwiLgoaQWRkcmVzc0Zyb21NbmVtb25pY1JlcXVlc3QSEAoIbW5lbW9uaWMYASABKAkiLgobQWRkcmVzc0Zyb21NbmVtb25pY1Jlc3BvbnNlEg8KB2FkZHJlc3MYASABKAwiKwobVmFsaWRhdGVNbmVtb25pY1dvcmRSZXF1ZXN0EgwKBHdvcmQYASABKAkiLQocVmFsaWRhdGVNbmVtb25pY1dvcmRSZXNwb25zZRINCgV2YWxpZBgBIAEoCCIvCh1WYWxpZGF0ZU1uZW1vbmljUGhyYXNlUmVxdWVzdBIOCgZwaHJhc2UYASABKAkiLwoeVmFsaWRhdGVNbmVtb25pY1BocmFzZVJlc3BvbnNlEg0KBXZhbGlkGAEgASgIIiIKDEhlbGxvUmVxdWVzdBISCgRuYW1lGAEgASgJUgROYW1lIisKDUhlbGxvUmVzcG9uc2USGgoIZ3JlZXRpbmcYASABKAlSCEdyZWV0aW5nIigKEkhlbGxvU3RyZWFtUmVxdWVzdBISCgRuYW1lGAEgASgJUgROYW1lIjEKE0hlbGxvU3RyZWFtUmVzcG9uc2USGgoIZ3JlZXRpbmcYASABKAlSCEdyZWV0aW5nIikKGEdOT05BVElWRVRZUEVTX0J5dGVzTGlzdBINCgVWYWx1ZRgBIAMoDEIsWipnaXRodWIuY29tL2dub2xhbmcvZ25vbmF0aXZlL3Y0L2FwaS9nZW4vZ29iBnByb3RvMw");

/**
 * messages
 *
 * @generated from message land.gno.gnonative.v1.SetRemoteRequest
 */
export type SetRemoteRequest = Message<"land.gno.gnonative.v1.SetRemoteRequest"> & {
  /**
   * @generated from field: string remote = 1;
   */
  remote: string;
};

/**
 * Describes the message land.gno.gnonative.v1.SetRemoteRequest.
 * Use `create(SetRemoteRequestSchema)` to create a new message.
 */
export const SetRemoteRequestSchema: GenMessage<SetRemoteRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 0);

/**
 * @generated from message land.gno.gnonative.v1.SetRemoteResponse
 */
export type SetRemoteResponse = Message<"land.gno.gnonative.v1.SetRemoteResponse"> & {
};

/**
 * Describes the message land.gno.gnonative.v1.SetRemoteResponse.
 * Use `create(SetRemoteResponseSchema)` to create a new message.
 */
export const SetRemoteResponseSchema: GenMessage<SetRemoteResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 1);

/**
 * @generated from message land.gno.gnonative.v1.GetRemoteRequest
 */
export type GetRemoteRequest = Message<"land.gno.gnonative.v1.GetRemoteRequest"> & {
};

/**
 * Describes the message land.gno.gnonative.v1.GetRemoteRequest.
 * Use `create(GetRemoteRequestSchema)` to create a new message.
 */
export const GetRemoteRequestSchema: GenMessage<GetRemoteRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 2);

/**
 * @generated from message land.gno.gnonative.v1.GetRemoteResponse
 */
export type GetRemoteResponse = Message<"land.gno.gnonative.v1.GetRemoteResponse"> & {
  /**
   * @generated from field: string remote = 1;
   */
  remote: string;
};

/**
 * Describes the message land.gno.gnonative.v1.GetRemoteResponse.
 * Use `create(GetRemoteResponseSchema)` to create a new message.
 */
export const GetRemoteResponseSchema: GenMessage<GetRemoteResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 3);

/**
 * @generated from message land.gno.gnonative.v1.SetChainIDRequest
 */
export type SetChainIDRequest = Message<"land.gno.gnonative.v1.SetChainIDRequest"> & {
  /**
   * @generated from field: string chain_id = 1;
   */
  chainId: string;
};

/**
 * Describes the message land.gno.gnonative.v1.SetChainIDRequest.
 * Use `create(SetChainIDRequestSchema)` to create a new message.
 */
export const SetChainIDRequestSchema: GenMessage<SetChainIDRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 4);

/**
 * @generated from message land.gno.gnonative.v1.SetChainIDResponse
 */
export type SetChainIDResponse = Message<"land.gno.gnonative.v1.SetChainIDResponse"> & {
};

/**
 * Describes the message land.gno.gnonative.v1.SetChainIDResponse.
 * Use `create(SetChainIDResponseSchema)` to create a new message.
 */
export const SetChainIDResponseSchema: GenMessage<SetChainIDResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 5);

/**
 * @generated from message land.gno.gnonative.v1.GetChainIDRequest
 */
export type GetChainIDRequest = Message<"land.gno.gnonative.v1.GetChainIDRequest"> & {
};

/**
 * Describes the message land.gno.gnonative.v1.GetChainIDRequest.
 * Use `create(GetChainIDRequestSchema)` to create a new message.
 */
export const GetChainIDRequestSchema: GenMessage<GetChainIDRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 6);

/**
 * @generated from message land.gno.gnonative.v1.GetChainIDResponse
 */
export type GetChainIDResponse = Message<"land.gno.gnonative.v1.GetChainIDResponse"> & {
  /**
   * @generated from field: string chain_id = 1;
   */
  chainId: string;
};

/**
 * Describes the message land.gno.gnonative.v1.GetChainIDResponse.
 * Use `create(GetChainIDResponseSchema)` to create a new message.
 */
export const GetChainIDResponseSchema: GenMessage<GetChainIDResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 7);

/**
 * @generated from message land.gno.gnonative.v1.SetPasswordRequest
 */
export type SetPasswordRequest = Message<"land.gno.gnonative.v1.SetPasswordRequest"> & {
  /**
   * @generated from field: string password = 1;
   */
  password: string;

  /**
   * The address of the account to set the password
   *
   * @generated from field: bytes address = 2;
   */
  address: Uint8Array;
};

/**
 * Describes the message land.gno.gnonative.v1.SetPasswordRequest.
 * Use `create(SetPasswordRequestSchema)` to create a new message.
 */
export const SetPasswordRequestSchema: GenMessage<SetPasswordRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 8);

/**
 * @generated from message land.gno.gnonative.v1.SetPasswordResponse
 */
export type SetPasswordResponse = Message<"land.gno.gnonative.v1.SetPasswordResponse"> & {
};

/**
 * Describes the message land.gno.gnonative.v1.SetPasswordResponse.
 * Use `create(SetPasswordResponseSchema)` to create a new message.
 */
export const SetPasswordResponseSchema: GenMessage<SetPasswordResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 9);

/**
 * @generated from message land.gno.gnonative.v1.RotatePasswordRequest
 */
export type RotatePasswordRequest = Message<"land.gno.gnonative.v1.RotatePasswordRequest"> & {
  /**
   * @generated from field: string new_password = 1;
   */
  newPassword: string;

  /**
   * The addresses of the account to rotate the password
   *
   * @generated from field: repeated bytes addresses = 2;
   */
  addresses: Uint8Array[];
};

/**
 * Describes the message land.gno.gnonative.v1.RotatePasswordRequest.
 * Use `create(RotatePasswordRequestSchema)` to create a new message.
 */
export const RotatePasswordRequestSchema: GenMessage<RotatePasswordRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 10);

/**
 * @generated from message land.gno.gnonative.v1.RotatePasswordResponse
 */
export type RotatePasswordResponse = Message<"land.gno.gnonative.v1.RotatePasswordResponse"> & {
};

/**
 * Describes the message land.gno.gnonative.v1.RotatePasswordResponse.
 * Use `create(RotatePasswordResponseSchema)` to create a new message.
 */
export const RotatePasswordResponseSchema: GenMessage<RotatePasswordResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 11);

/**
 * @generated from message land.gno.gnonative.v1.GenerateRecoveryPhraseRequest
 */
export type GenerateRecoveryPhraseRequest = Message<"land.gno.gnonative.v1.GenerateRecoveryPhraseRequest"> & {
};

/**
 * Describes the message land.gno.gnonative.v1.GenerateRecoveryPhraseRequest.
 * Use `create(GenerateRecoveryPhraseRequestSchema)` to create a new message.
 */
export const GenerateRecoveryPhraseRequestSchema: GenMessage<GenerateRecoveryPhraseRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 12);

/**
 * @generated from message land.gno.gnonative.v1.GenerateRecoveryPhraseResponse
 */
export type GenerateRecoveryPhraseResponse = Message<"land.gno.gnonative.v1.GenerateRecoveryPhraseResponse"> & {
  /**
   * @generated from field: string phrase = 1;
   */
  phrase: string;
};

/**
 * Describes the message land.gno.gnonative.v1.GenerateRecoveryPhraseResponse.
 * Use `create(GenerateRecoveryPhraseResponseSchema)` to create a new message.
 */
export const GenerateRecoveryPhraseResponseSchema: GenMessage<GenerateRecoveryPhraseResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 13);

/**
 * @generated from message land.gno.gnonative.v1.KeyInfo
 */
export type KeyInfo = Message<"land.gno.gnonative.v1.KeyInfo"> & {
  /**
   * 0: local, 1: ledger, 2: offline, 3: multi
   *
   * @generated from field: uint32 type = 1;
   */
  type: number;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: bytes pub_key = 3;
   */
  pubKey: Uint8Array;

  /**
   * @generated from field: bytes address = 4;
   */
  address: Uint8Array;
};

/**
 * Describes the message land.gno.gnonative.v1.KeyInfo.
 * Use `create(KeyInfoSchema)` to create a new message.
 */
export const KeyInfoSchema: GenMessage<KeyInfo> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 14);

/**
 * Coin holds some amount of one currency.
 * A negative amount is invalid.
 *
 * @generated from message land.gno.gnonative.v1.Coin
 */
export type Coin = Message<"land.gno.gnonative.v1.Coin"> & {
  /**
   * Example: "ugnot"
   *
   * @generated from field: string denom = 1;
   */
  denom: string;

  /**
   * @generated from field: sint64 amount = 2;
   */
  amount: bigint;
};

/**
 * Describes the message land.gno.gnonative.v1.Coin.
 * Use `create(CoinSchema)` to create a new message.
 */
export const CoinSchema: GenMessage<Coin> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 15);

/**
 * @generated from message land.gno.gnonative.v1.BaseAccount
 */
export type BaseAccount = Message<"land.gno.gnonative.v1.BaseAccount"> & {
  /**
   * @generated from field: bytes address = 1;
   */
  address: Uint8Array;

  /**
   * @generated from field: repeated land.gno.gnonative.v1.Coin coins = 2;
   */
  coins: Coin[];

  /**
   * @generated from field: bytes pub_key = 3;
   */
  pubKey: Uint8Array;

  /**
   * @generated from field: uint64 account_number = 4;
   */
  accountNumber: bigint;

  /**
   * @generated from field: uint64 sequence = 5;
   */
  sequence: bigint;
};

/**
 * Describes the message land.gno.gnonative.v1.BaseAccount.
 * Use `create(BaseAccountSchema)` to create a new message.
 */
export const BaseAccountSchema: GenMessage<BaseAccount> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 16);

/**
 * @generated from message land.gno.gnonative.v1.ListKeyInfoRequest
 */
export type ListKeyInfoRequest = Message<"land.gno.gnonative.v1.ListKeyInfoRequest"> & {
};

/**
 * Describes the message land.gno.gnonative.v1.ListKeyInfoRequest.
 * Use `create(ListKeyInfoRequestSchema)` to create a new message.
 */
export const ListKeyInfoRequestSchema: GenMessage<ListKeyInfoRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 17);

/**
 * @generated from message land.gno.gnonative.v1.ListKeyInfoResponse
 */
export type ListKeyInfoResponse = Message<"land.gno.gnonative.v1.ListKeyInfoResponse"> & {
  /**
   * @generated from field: repeated land.gno.gnonative.v1.KeyInfo keys = 1 [json_name = "key_info"];
   */
  keys: KeyInfo[];
};

/**
 * Describes the message land.gno.gnonative.v1.ListKeyInfoResponse.
 * Use `create(ListKeyInfoResponseSchema)` to create a new message.
 */
export const ListKeyInfoResponseSchema: GenMessage<ListKeyInfoResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 18);

/**
 * @generated from message land.gno.gnonative.v1.HasKeyByNameRequest
 */
export type HasKeyByNameRequest = Message<"land.gno.gnonative.v1.HasKeyByNameRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message land.gno.gnonative.v1.HasKeyByNameRequest.
 * Use `create(HasKeyByNameRequestSchema)` to create a new message.
 */
export const HasKeyByNameRequestSchema: GenMessage<HasKeyByNameRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 19);

/**
 * @generated from message land.gno.gnonative.v1.HasKeyByNameResponse
 */
export type HasKeyByNameResponse = Message<"land.gno.gnonative.v1.HasKeyByNameResponse"> & {
  /**
   * @generated from field: bool has = 1;
   */
  has: boolean;
};

/**
 * Describes the message land.gno.gnonative.v1.HasKeyByNameResponse.
 * Use `create(HasKeyByNameResponseSchema)` to create a new message.
 */
export const HasKeyByNameResponseSchema: GenMessage<HasKeyByNameResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 20);

/**
 * @generated from message land.gno.gnonative.v1.HasKeyByAddressRequest
 */
export type HasKeyByAddressRequest = Message<"land.gno.gnonative.v1.HasKeyByAddressRequest"> & {
  /**
   * @generated from field: bytes address = 1;
   */
  address: Uint8Array;
};

/**
 * Describes the message land.gno.gnonative.v1.HasKeyByAddressRequest.
 * Use `create(HasKeyByAddressRequestSchema)` to create a new message.
 */
export const HasKeyByAddressRequestSchema: GenMessage<HasKeyByAddressRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 21);

/**
 * @generated from message land.gno.gnonative.v1.HasKeyByAddressResponse
 */
export type HasKeyByAddressResponse = Message<"land.gno.gnonative.v1.HasKeyByAddressResponse"> & {
  /**
   * @generated from field: bool has = 1;
   */
  has: boolean;
};

/**
 * Describes the message land.gno.gnonative.v1.HasKeyByAddressResponse.
 * Use `create(HasKeyByAddressResponseSchema)` to create a new message.
 */
export const HasKeyByAddressResponseSchema: GenMessage<HasKeyByAddressResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 22);

/**
 * @generated from message land.gno.gnonative.v1.HasKeyByNameOrAddressRequest
 */
export type HasKeyByNameOrAddressRequest = Message<"land.gno.gnonative.v1.HasKeyByNameOrAddressRequest"> & {
  /**
   * @generated from field: string name_or_bech32 = 1;
   */
  nameOrBech32: string;
};

/**
 * Describes the message land.gno.gnonative.v1.HasKeyByNameOrAddressRequest.
 * Use `create(HasKeyByNameOrAddressRequestSchema)` to create a new message.
 */
export const HasKeyByNameOrAddressRequestSchema: GenMessage<HasKeyByNameOrAddressRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 23);

/**
 * @generated from message land.gno.gnonative.v1.HasKeyByNameOrAddressResponse
 */
export type HasKeyByNameOrAddressResponse = Message<"land.gno.gnonative.v1.HasKeyByNameOrAddressResponse"> & {
  /**
   * @generated from field: bool has = 1;
   */
  has: boolean;
};

/**
 * Describes the message land.gno.gnonative.v1.HasKeyByNameOrAddressResponse.
 * Use `create(HasKeyByNameOrAddressResponseSchema)` to create a new message.
 */
export const HasKeyByNameOrAddressResponseSchema: GenMessage<HasKeyByNameOrAddressResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 24);

/**
 * @generated from message land.gno.gnonative.v1.GetKeyInfoByNameRequest
 */
export type GetKeyInfoByNameRequest = Message<"land.gno.gnonative.v1.GetKeyInfoByNameRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message land.gno.gnonative.v1.GetKeyInfoByNameRequest.
 * Use `create(GetKeyInfoByNameRequestSchema)` to create a new message.
 */
export const GetKeyInfoByNameRequestSchema: GenMessage<GetKeyInfoByNameRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 25);

/**
 * @generated from message land.gno.gnonative.v1.GetKeyInfoByNameResponse
 */
export type GetKeyInfoByNameResponse = Message<"land.gno.gnonative.v1.GetKeyInfoByNameResponse"> & {
  /**
   * @generated from field: land.gno.gnonative.v1.KeyInfo key = 1 [json_name = "key_info"];
   */
  key?: KeyInfo;
};

/**
 * Describes the message land.gno.gnonative.v1.GetKeyInfoByNameResponse.
 * Use `create(GetKeyInfoByNameResponseSchema)` to create a new message.
 */
export const GetKeyInfoByNameResponseSchema: GenMessage<GetKeyInfoByNameResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 26);

/**
 * @generated from message land.gno.gnonative.v1.GetKeyInfoByAddressRequest
 */
export type GetKeyInfoByAddressRequest = Message<"land.gno.gnonative.v1.GetKeyInfoByAddressRequest"> & {
  /**
   * @generated from field: bytes address = 1;
   */
  address: Uint8Array;
};

/**
 * Describes the message land.gno.gnonative.v1.GetKeyInfoByAddressRequest.
 * Use `create(GetKeyInfoByAddressRequestSchema)` to create a new message.
 */
export const GetKeyInfoByAddressRequestSchema: GenMessage<GetKeyInfoByAddressRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 27);

/**
 * @generated from message land.gno.gnonative.v1.GetKeyInfoByAddressResponse
 */
export type GetKeyInfoByAddressResponse = Message<"land.gno.gnonative.v1.GetKeyInfoByAddressResponse"> & {
  /**
   * @generated from field: land.gno.gnonative.v1.KeyInfo key = 1 [json_name = "key_info"];
   */
  key?: KeyInfo;
};

/**
 * Describes the message land.gno.gnonative.v1.GetKeyInfoByAddressResponse.
 * Use `create(GetKeyInfoByAddressResponseSchema)` to create a new message.
 */
export const GetKeyInfoByAddressResponseSchema: GenMessage<GetKeyInfoByAddressResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 28);

/**
 * @generated from message land.gno.gnonative.v1.GetKeyInfoByNameOrAddressRequest
 */
export type GetKeyInfoByNameOrAddressRequest = Message<"land.gno.gnonative.v1.GetKeyInfoByNameOrAddressRequest"> & {
  /**
   * @generated from field: string name_or_bech32 = 1;
   */
  nameOrBech32: string;
};

/**
 * Describes the message land.gno.gnonative.v1.GetKeyInfoByNameOrAddressRequest.
 * Use `create(GetKeyInfoByNameOrAddressRequestSchema)` to create a new message.
 */
export const GetKeyInfoByNameOrAddressRequestSchema: GenMessage<GetKeyInfoByNameOrAddressRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 29);

/**
 * @generated from message land.gno.gnonative.v1.GetKeyInfoByNameOrAddressResponse
 */
export type GetKeyInfoByNameOrAddressResponse = Message<"land.gno.gnonative.v1.GetKeyInfoByNameOrAddressResponse"> & {
  /**
   * @generated from field: land.gno.gnonative.v1.KeyInfo key = 1 [json_name = "key_info"];
   */
  key?: KeyInfo;
};

/**
 * Describes the message land.gno.gnonative.v1.GetKeyInfoByNameOrAddressResponse.
 * Use `create(GetKeyInfoByNameOrAddressResponseSchema)` to create a new message.
 */
export const GetKeyInfoByNameOrAddressResponseSchema: GenMessage<GetKeyInfoByNameOrAddressResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 30);

/**
 * @generated from message land.gno.gnonative.v1.CreateAccountRequest
 */
export type CreateAccountRequest = Message<"land.gno.gnonative.v1.CreateAccountRequest"> & {
  /**
   * @generated from field: string name_or_bech32 = 1;
   */
  nameOrBech32: string;

  /**
   * @generated from field: string mnemonic = 2;
   */
  mnemonic: string;

  /**
   * @generated from field: string bip39_passwd = 3;
   */
  bip39Passwd: string;

  /**
   * @generated from field: string password = 4;
   */
  password: string;

  /**
   * @generated from field: uint32 account = 5;
   */
  account: number;

  /**
   * @generated from field: uint32 index = 6;
   */
  index: number;
};

/**
 * Describes the message land.gno.gnonative.v1.CreateAccountRequest.
 * Use `create(CreateAccountRequestSchema)` to create a new message.
 */
export const CreateAccountRequestSchema: GenMessage<CreateAccountRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 31);

/**
 * @generated from message land.gno.gnonative.v1.CreateAccountResponse
 */
export type CreateAccountResponse = Message<"land.gno.gnonative.v1.CreateAccountResponse"> & {
  /**
   * @generated from field: land.gno.gnonative.v1.KeyInfo key = 1 [json_name = "key_info"];
   */
  key?: KeyInfo;
};

/**
 * Describes the message land.gno.gnonative.v1.CreateAccountResponse.
 * Use `create(CreateAccountResponseSchema)` to create a new message.
 */
export const CreateAccountResponseSchema: GenMessage<CreateAccountResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 32);

/**
 * @generated from message land.gno.gnonative.v1.ActivateAccountRequest
 */
export type ActivateAccountRequest = Message<"land.gno.gnonative.v1.ActivateAccountRequest"> & {
  /**
   * @generated from field: string name_or_bech32 = 1;
   */
  nameOrBech32: string;
};

/**
 * Describes the message land.gno.gnonative.v1.ActivateAccountRequest.
 * Use `create(ActivateAccountRequestSchema)` to create a new message.
 */
export const ActivateAccountRequestSchema: GenMessage<ActivateAccountRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 33);

/**
 * @generated from message land.gno.gnonative.v1.ActivateAccountResponse
 */
export type ActivateAccountResponse = Message<"land.gno.gnonative.v1.ActivateAccountResponse"> & {
  /**
   * @generated from field: land.gno.gnonative.v1.KeyInfo key = 1 [json_name = "key_info"];
   */
  key?: KeyInfo;

  /**
   * True if the password has been set. If false, then call SetPassword.
   *
   * @generated from field: bool has_password = 2;
   */
  hasPassword: boolean;
};

/**
 * Describes the message land.gno.gnonative.v1.ActivateAccountResponse.
 * Use `create(ActivateAccountResponseSchema)` to create a new message.
 */
export const ActivateAccountResponseSchema: GenMessage<ActivateAccountResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 34);

/**
 * @generated from message land.gno.gnonative.v1.GetActivatedAccountRequest
 */
export type GetActivatedAccountRequest = Message<"land.gno.gnonative.v1.GetActivatedAccountRequest"> & {
  /**
   * @generated from field: bytes address = 1;
   */
  address: Uint8Array;
};

/**
 * Describes the message land.gno.gnonative.v1.GetActivatedAccountRequest.
 * Use `create(GetActivatedAccountRequestSchema)` to create a new message.
 */
export const GetActivatedAccountRequestSchema: GenMessage<GetActivatedAccountRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 35);

/**
 * @generated from message land.gno.gnonative.v1.GetActivatedAccountResponse
 */
export type GetActivatedAccountResponse = Message<"land.gno.gnonative.v1.GetActivatedAccountResponse"> & {
  /**
   * @generated from field: land.gno.gnonative.v1.KeyInfo key = 1 [json_name = "key_info"];
   */
  key?: KeyInfo;

  /**
   * True if the password has been set. If false, then call SetPassword.
   *
   * @generated from field: bool has_password = 2;
   */
  hasPassword: boolean;
};

/**
 * Describes the message land.gno.gnonative.v1.GetActivatedAccountResponse.
 * Use `create(GetActivatedAccountResponseSchema)` to create a new message.
 */
export const GetActivatedAccountResponseSchema: GenMessage<GetActivatedAccountResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 36);

/**
 * @generated from message land.gno.gnonative.v1.QueryAccountRequest
 */
export type QueryAccountRequest = Message<"land.gno.gnonative.v1.QueryAccountRequest"> & {
  /**
   * @generated from field: bytes address = 1;
   */
  address: Uint8Array;
};

/**
 * Describes the message land.gno.gnonative.v1.QueryAccountRequest.
 * Use `create(QueryAccountRequestSchema)` to create a new message.
 */
export const QueryAccountRequestSchema: GenMessage<QueryAccountRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 37);

/**
 * @generated from message land.gno.gnonative.v1.QueryAccountResponse
 */
export type QueryAccountResponse = Message<"land.gno.gnonative.v1.QueryAccountResponse"> & {
  /**
   * @generated from field: land.gno.gnonative.v1.BaseAccount account_info = 1;
   */
  accountInfo?: BaseAccount;
};

/**
 * Describes the message land.gno.gnonative.v1.QueryAccountResponse.
 * Use `create(QueryAccountResponseSchema)` to create a new message.
 */
export const QueryAccountResponseSchema: GenMessage<QueryAccountResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 38);

/**
 * @generated from message land.gno.gnonative.v1.DeleteAccountRequest
 */
export type DeleteAccountRequest = Message<"land.gno.gnonative.v1.DeleteAccountRequest"> & {
  /**
   * @generated from field: string name_or_bech32 = 1;
   */
  nameOrBech32: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;

  /**
   * @generated from field: bool skip_password = 3;
   */
  skipPassword: boolean;
};

/**
 * Describes the message land.gno.gnonative.v1.DeleteAccountRequest.
 * Use `create(DeleteAccountRequestSchema)` to create a new message.
 */
export const DeleteAccountRequestSchema: GenMessage<DeleteAccountRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 39);

/**
 * @generated from message land.gno.gnonative.v1.DeleteAccountResponse
 */
export type DeleteAccountResponse = Message<"land.gno.gnonative.v1.DeleteAccountResponse"> & {
};

/**
 * Describes the message land.gno.gnonative.v1.DeleteAccountResponse.
 * Use `create(DeleteAccountResponseSchema)` to create a new message.
 */
export const DeleteAccountResponseSchema: GenMessage<DeleteAccountResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 40);

/**
 * @generated from message land.gno.gnonative.v1.QueryRequest
 */
export type QueryRequest = Message<"land.gno.gnonative.v1.QueryRequest"> & {
  /**
   * Example: "vm/qrender"
   *
   * @generated from field: string path = 1;
   */
  path: string;

  /**
   * Example: "gno.land/r/demo/boards\ntestboard"
   *
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;
};

/**
 * Describes the message land.gno.gnonative.v1.QueryRequest.
 * Use `create(QueryRequestSchema)` to create a new message.
 */
export const QueryRequestSchema: GenMessage<QueryRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 41);

/**
 * @generated from message land.gno.gnonative.v1.QueryResponse
 */
export type QueryResponse = Message<"land.gno.gnonative.v1.QueryResponse"> & {
  /**
   * @generated from field: bytes result = 1;
   */
  result: Uint8Array;
};

/**
 * Describes the message land.gno.gnonative.v1.QueryResponse.
 * Use `create(QueryResponseSchema)` to create a new message.
 */
export const QueryResponseSchema: GenMessage<QueryResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 42);

/**
 * @generated from message land.gno.gnonative.v1.RenderRequest
 */
export type RenderRequest = Message<"land.gno.gnonative.v1.RenderRequest"> & {
  /**
   * Example: "gno.land/r/demo/boards"
   *
   * @generated from field: string package_path = 1;
   */
  packagePath: string;

  /**
   * Example: "testboard/1"
   *
   * @generated from field: string args = 2;
   */
  args: string;
};

/**
 * Describes the message land.gno.gnonative.v1.RenderRequest.
 * Use `create(RenderRequestSchema)` to create a new message.
 */
export const RenderRequestSchema: GenMessage<RenderRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 43);

/**
 * @generated from message land.gno.gnonative.v1.RenderResponse
 */
export type RenderResponse = Message<"land.gno.gnonative.v1.RenderResponse"> & {
  /**
   * The Render function result (typically markdown)
   *
   * @generated from field: string result = 1;
   */
  result: string;
};

/**
 * Describes the message land.gno.gnonative.v1.RenderResponse.
 * Use `create(RenderResponseSchema)` to create a new message.
 */
export const RenderResponseSchema: GenMessage<RenderResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 44);

/**
 * @generated from message land.gno.gnonative.v1.QEvalRequest
 */
export type QEvalRequest = Message<"land.gno.gnonative.v1.QEvalRequest"> & {
  /**
   * Example: "gno.land/r/demo/boards"
   *
   * @generated from field: string package_path = 1;
   */
  packagePath: string;

  /**
   * Example: "GetBoardIDFromName(\"testboard\")"
   *
   * @generated from field: string expression = 2;
   */
  expression: string;
};

/**
 * Describes the message land.gno.gnonative.v1.QEvalRequest.
 * Use `create(QEvalRequestSchema)` to create a new message.
 */
export const QEvalRequestSchema: GenMessage<QEvalRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 45);

/**
 * @generated from message land.gno.gnonative.v1.QEvalResponse
 */
export type QEvalResponse = Message<"land.gno.gnonative.v1.QEvalResponse"> & {
  /**
   * A typed expression like "(1 gno.land/r/demo/boards.BoardID)\n(true bool)"
   *
   * @generated from field: string result = 1;
   */
  result: string;
};

/**
 * Describes the message land.gno.gnonative.v1.QEvalResponse.
 * Use `create(QEvalResponseSchema)` to create a new message.
 */
export const QEvalResponseSchema: GenMessage<QEvalResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 46);

/**
 * @generated from message land.gno.gnonative.v1.MsgCall
 */
export type MsgCall = Message<"land.gno.gnonative.v1.MsgCall"> & {
  /**
   * Example: "gno.land/r/demo/boards"
   *
   * @generated from field: string package_path = 1;
   */
  packagePath: string;

  /**
   * Example: "CreateReply"
   *
   * @generated from field: string fnc = 2;
   */
  fnc: string;

  /**
   * list of arguments specific to the function
   * Example: ["1", "1", "2", "my reply"]
   *
   * @generated from field: repeated string args = 3;
   */
  args: string[];

  /**
   * @generated from field: repeated land.gno.gnonative.v1.Coin send = 4;
   */
  send: Coin[];
};

/**
 * Describes the message land.gno.gnonative.v1.MsgCall.
 * Use `create(MsgCallSchema)` to create a new message.
 */
export const MsgCallSchema: GenMessage<MsgCall> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 47);

/**
 * @generated from message land.gno.gnonative.v1.CallRequest
 */
export type CallRequest = Message<"land.gno.gnonative.v1.CallRequest"> & {
  /**
   * @generated from field: string gas_fee = 1;
   */
  gasFee: string;

  /**
   * @generated from field: sint64 gas_wanted = 2;
   */
  gasWanted: bigint;

  /**
   * @generated from field: string memo = 3;
   */
  memo: string;

  /**
   * The address of the account to sign the transaction
   *
   * @generated from field: bytes caller_address = 4;
   */
  callerAddress: Uint8Array;

  /**
   * list of calls to make in one transaction
   *
   * @generated from field: repeated land.gno.gnonative.v1.MsgCall msgs = 5 [json_name = "Msgs"];
   */
  msgs: MsgCall[];
};

/**
 * Describes the message land.gno.gnonative.v1.CallRequest.
 * Use `create(CallRequestSchema)` to create a new message.
 */
export const CallRequestSchema: GenMessage<CallRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 48);

/**
 * @generated from message land.gno.gnonative.v1.CallResponse
 */
export type CallResponse = Message<"land.gno.gnonative.v1.CallResponse"> & {
  /**
   * @generated from field: bytes result = 1;
   */
  result: Uint8Array;

  /**
   * The transaction hash
   *
   * @generated from field: bytes hash = 2;
   */
  hash: Uint8Array;

  /**
   * The transaction height
   *
   * @generated from field: sint64 height = 3;
   */
  height: bigint;
};

/**
 * Describes the message land.gno.gnonative.v1.CallResponse.
 * Use `create(CallResponseSchema)` to create a new message.
 */
export const CallResponseSchema: GenMessage<CallResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 49);

/**
 * @generated from message land.gno.gnonative.v1.MsgSend
 */
export type MsgSend = Message<"land.gno.gnonative.v1.MsgSend"> & {
  /**
   * Example: The response of calling AddressFromBech32 with
   * "g1juz2yxmdsa6audkp6ep9vfv80c8p5u76e03vvh"
   *
   * @generated from field: bytes to_address = 1;
   */
  toAddress: Uint8Array;

  /**
   * Example: [ {Denom: "ugnot", Amount: 1000} ]
   *
   * @generated from field: repeated land.gno.gnonative.v1.Coin amount = 2;
   */
  amount: Coin[];
};

/**
 * Describes the message land.gno.gnonative.v1.MsgSend.
 * Use `create(MsgSendSchema)` to create a new message.
 */
export const MsgSendSchema: GenMessage<MsgSend> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 50);

/**
 * @generated from message land.gno.gnonative.v1.SendRequest
 */
export type SendRequest = Message<"land.gno.gnonative.v1.SendRequest"> & {
  /**
   * @generated from field: string gas_fee = 1;
   */
  gasFee: string;

  /**
   * @generated from field: sint64 gas_wanted = 2;
   */
  gasWanted: bigint;

  /**
   * Memo is optional
   *
   * @generated from field: string memo = 3;
   */
  memo: string;

  /**
   * The address of the account to sign the transaction
   *
   * @generated from field: bytes caller_address = 4;
   */
  callerAddress: Uint8Array;

  /**
   * list of send operations to make in one transaction
   *
   * @generated from field: repeated land.gno.gnonative.v1.MsgSend msgs = 5 [json_name = "Msgs"];
   */
  msgs: MsgSend[];
};

/**
 * Describes the message land.gno.gnonative.v1.SendRequest.
 * Use `create(SendRequestSchema)` to create a new message.
 */
export const SendRequestSchema: GenMessage<SendRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 51);

/**
 * @generated from message land.gno.gnonative.v1.SendResponse
 */
export type SendResponse = Message<"land.gno.gnonative.v1.SendResponse"> & {
  /**
   * The transaction hash
   *
   * @generated from field: bytes hash = 1;
   */
  hash: Uint8Array;

  /**
   * The transaction height
   *
   * @generated from field: sint64 height = 2;
   */
  height: bigint;
};

/**
 * Describes the message land.gno.gnonative.v1.SendResponse.
 * Use `create(SendResponseSchema)` to create a new message.
 */
export const SendResponseSchema: GenMessage<SendResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 52);

/**
 * @generated from message land.gno.gnonative.v1.MsgRun
 */
export type MsgRun = Message<"land.gno.gnonative.v1.MsgRun"> & {
  /**
   * The code for the script package. Must have main().
   * Example: "package main\nfunc main() {\n  println(\"Hello\")\n}"
   *
   * @generated from field: string package = 1;
   */
  package: string;

  /**
   * Optional. Example: "1000ugnot"
   *
   * @generated from field: string send = 2;
   */
  send: string;
};

/**
 * Describes the message land.gno.gnonative.v1.MsgRun.
 * Use `create(MsgRunSchema)` to create a new message.
 */
export const MsgRunSchema: GenMessage<MsgRun> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 53);

/**
 * @generated from message land.gno.gnonative.v1.RunRequest
 */
export type RunRequest = Message<"land.gno.gnonative.v1.RunRequest"> & {
  /**
   * @generated from field: string gas_fee = 1;
   */
  gasFee: string;

  /**
   * @generated from field: sint64 gas_wanted = 2;
   */
  gasWanted: bigint;

  /**
   * Memo is optional
   *
   * @generated from field: string memo = 3;
   */
  memo: string;

  /**
   * The address of the account to sign the transaction
   *
   * @generated from field: bytes caller_address = 4;
   */
  callerAddress: Uint8Array;

  /**
   * list of run operations to make in one transaction
   *
   * @generated from field: repeated land.gno.gnonative.v1.MsgRun msgs = 5 [json_name = "Msgs"];
   */
  msgs: MsgRun[];
};

/**
 * Describes the message land.gno.gnonative.v1.RunRequest.
 * Use `create(RunRequestSchema)` to create a new message.
 */
export const RunRequestSchema: GenMessage<RunRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 54);

/**
 * @generated from message land.gno.gnonative.v1.RunResponse
 */
export type RunResponse = Message<"land.gno.gnonative.v1.RunResponse"> & {
  /**
   * The "console" output from the run
   *
   * @generated from field: string result = 1;
   */
  result: string;

  /**
   * The transaction hash
   *
   * @generated from field: bytes hash = 2;
   */
  hash: Uint8Array;

  /**
   * The transaction height
   *
   * @generated from field: sint64 height = 3;
   */
  height: bigint;
};

/**
 * Describes the message land.gno.gnonative.v1.RunResponse.
 * Use `create(RunResponseSchema)` to create a new message.
 */
export const RunResponseSchema: GenMessage<RunResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 55);

/**
 * @generated from message land.gno.gnonative.v1.MakeTxResponse
 */
export type MakeTxResponse = Message<"land.gno.gnonative.v1.MakeTxResponse"> & {
  /**
   * The JSON encoding of the unsigned transaction
   *
   * @generated from field: string tx_json = 1;
   */
  txJson: string;
};

/**
 * Describes the message land.gno.gnonative.v1.MakeTxResponse.
 * Use `create(MakeTxResponseSchema)` to create a new message.
 */
export const MakeTxResponseSchema: GenMessage<MakeTxResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 56);

/**
 * @generated from message land.gno.gnonative.v1.SignTxRequest
 */
export type SignTxRequest = Message<"land.gno.gnonative.v1.SignTxRequest"> & {
  /**
   * The JSON encoding of the unsigned transaction (from MakeCallTx, etc.)
   *
   * @generated from field: string tx_json = 1;
   */
  txJson: string;

  /**
   * The address of the account to sign the transaction
   *
   * @generated from field: bytes address = 2;
   */
  address: Uint8Array;

  /**
   * The signer's account number on the blockchain. If 0 then query the blockchain for the value.
   *
   * @generated from field: uint64 account_number = 3;
   */
  accountNumber: bigint;

  /**
   * The sequence number of the signer's transactions on the blockchain. If 0 then query the blockchain for the value.
   *
   * @generated from field: uint64 sequence_number = 4;
   */
  sequenceNumber: bigint;
};

/**
 * Describes the message land.gno.gnonative.v1.SignTxRequest.
 * Use `create(SignTxRequestSchema)` to create a new message.
 */
export const SignTxRequestSchema: GenMessage<SignTxRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 57);

/**
 * @generated from message land.gno.gnonative.v1.SignTxResponse
 */
export type SignTxResponse = Message<"land.gno.gnonative.v1.SignTxResponse"> & {
  /**
   * The JSON encoding of the signed transaction (to use in BroadcastTx)
   *
   * @generated from field: string signed_tx_json = 1 [json_name = "tx_json"];
   */
  signedTxJson: string;
};

/**
 * Describes the message land.gno.gnonative.v1.SignTxResponse.
 * Use `create(SignTxResponseSchema)` to create a new message.
 */
export const SignTxResponseSchema: GenMessage<SignTxResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 58);

/**
 * @generated from message land.gno.gnonative.v1.EstimateGasRequest
 */
export type EstimateGasRequest = Message<"land.gno.gnonative.v1.EstimateGasRequest"> & {
  /**
   * The JSON encoding of the unsigned transaction (from MakeCallTx, etc.)
   *
   * @generated from field: string tx_json = 1;
   */
  txJson: string;

  /**
   * The address of the account to sign the transaction
   *
   * @generated from field: bytes address = 2;
   */
  address: Uint8Array;

  /**
   * The security margin to apply to the estimated gas amount.
   * This number represents a decimal numeral value with two decimals precision, without the decimal separator. E.g. 1 means 0.01 and 10000 means 100.00.
   * It will be multiplied by the estimated gas amount.
   *
   * @generated from field: uint32 security_margin = 3;
   */
  securityMargin: number;

  /**
   * The update boolean to update the gas wanted field in the transaction if true.
   *
   * @generated from field: bool update_tx = 4;
   */
  updateTx: boolean;

  /**
   * The signer's account number on the blockchain. If 0 then query the blockchain for the value.
   *
   * @generated from field: uint64 account_number = 5;
   */
  accountNumber: bigint;

  /**
   * The sequence number of the signer's transactions on the blockchain. If 0 then query the blockchain for the value.
   *
   * @generated from field: uint64 sequence_number = 6;
   */
  sequenceNumber: bigint;
};

/**
 * Describes the message land.gno.gnonative.v1.EstimateGasRequest.
 * Use `create(EstimateGasRequestSchema)` to create a new message.
 */
export const EstimateGasRequestSchema: GenMessage<EstimateGasRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 59);

/**
 * @generated from message land.gno.gnonative.v1.EstimateGasResponse
 */
export type EstimateGasResponse = Message<"land.gno.gnonative.v1.EstimateGasResponse"> & {
  /**
   * The JSON encoding of the unsigned transaction
   *
   * @generated from field: string tx_json = 1;
   */
  txJson: string;

  /**
   * The estimated gas wanted for the transaction
   *
   * @generated from field: sint64 gas_wanted = 2;
   */
  gasWanted: bigint;
};

/**
 * Describes the message land.gno.gnonative.v1.EstimateGasResponse.
 * Use `create(EstimateGasResponseSchema)` to create a new message.
 */
export const EstimateGasResponseSchema: GenMessage<EstimateGasResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 60);

/**
 * @generated from message land.gno.gnonative.v1.BroadcastTxCommitRequest
 */
export type BroadcastTxCommitRequest = Message<"land.gno.gnonative.v1.BroadcastTxCommitRequest"> & {
  /**
   * The JSON encoding of the signed transaction (from SignTx)
   *
   * @generated from field: string signed_tx_json = 1 [json_name = "tx_json"];
   */
  signedTxJson: string;
};

/**
 * Describes the message land.gno.gnonative.v1.BroadcastTxCommitRequest.
 * Use `create(BroadcastTxCommitRequestSchema)` to create a new message.
 */
export const BroadcastTxCommitRequestSchema: GenMessage<BroadcastTxCommitRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 61);

/**
 * @generated from message land.gno.gnonative.v1.BroadcastTxCommitResponse
 */
export type BroadcastTxCommitResponse = Message<"land.gno.gnonative.v1.BroadcastTxCommitResponse"> & {
  /**
   * @generated from field: bytes result = 1;
   */
  result: Uint8Array;

  /**
   * The transaction hash
   *
   * @generated from field: bytes hash = 2;
   */
  hash: Uint8Array;

  /**
   * The transaction height
   *
   * @generated from field: sint64 height = 3;
   */
  height: bigint;
};

/**
 * Describes the message land.gno.gnonative.v1.BroadcastTxCommitResponse.
 * Use `create(BroadcastTxCommitResponseSchema)` to create a new message.
 */
export const BroadcastTxCommitResponseSchema: GenMessage<BroadcastTxCommitResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 62);

/**
 * @generated from message land.gno.gnonative.v1.AddressToBech32Request
 */
export type AddressToBech32Request = Message<"land.gno.gnonative.v1.AddressToBech32Request"> & {
  /**
   * @generated from field: bytes address = 1;
   */
  address: Uint8Array;
};

/**
 * Describes the message land.gno.gnonative.v1.AddressToBech32Request.
 * Use `create(AddressToBech32RequestSchema)` to create a new message.
 */
export const AddressToBech32RequestSchema: GenMessage<AddressToBech32Request> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 63);

/**
 * @generated from message land.gno.gnonative.v1.AddressToBech32Response
 */
export type AddressToBech32Response = Message<"land.gno.gnonative.v1.AddressToBech32Response"> & {
  /**
   * @generated from field: string bech32_address = 1;
   */
  bech32Address: string;
};

/**
 * Describes the message land.gno.gnonative.v1.AddressToBech32Response.
 * Use `create(AddressToBech32ResponseSchema)` to create a new message.
 */
export const AddressToBech32ResponseSchema: GenMessage<AddressToBech32Response> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 64);

/**
 * @generated from message land.gno.gnonative.v1.AddressFromBech32Request
 */
export type AddressFromBech32Request = Message<"land.gno.gnonative.v1.AddressFromBech32Request"> & {
  /**
   * @generated from field: string bech32_address = 1;
   */
  bech32Address: string;
};

/**
 * Describes the message land.gno.gnonative.v1.AddressFromBech32Request.
 * Use `create(AddressFromBech32RequestSchema)` to create a new message.
 */
export const AddressFromBech32RequestSchema: GenMessage<AddressFromBech32Request> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 65);

/**
 * @generated from message land.gno.gnonative.v1.AddressFromBech32Response
 */
export type AddressFromBech32Response = Message<"land.gno.gnonative.v1.AddressFromBech32Response"> & {
  /**
   * @generated from field: bytes address = 1;
   */
  address: Uint8Array;
};

/**
 * Describes the message land.gno.gnonative.v1.AddressFromBech32Response.
 * Use `create(AddressFromBech32ResponseSchema)` to create a new message.
 */
export const AddressFromBech32ResponseSchema: GenMessage<AddressFromBech32Response> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 66);

/**
 * @generated from message land.gno.gnonative.v1.AddressFromMnemonicRequest
 */
export type AddressFromMnemonicRequest = Message<"land.gno.gnonative.v1.AddressFromMnemonicRequest"> & {
  /**
   * @generated from field: string mnemonic = 1;
   */
  mnemonic: string;
};

/**
 * Describes the message land.gno.gnonative.v1.AddressFromMnemonicRequest.
 * Use `create(AddressFromMnemonicRequestSchema)` to create a new message.
 */
export const AddressFromMnemonicRequestSchema: GenMessage<AddressFromMnemonicRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 67);

/**
 * @generated from message land.gno.gnonative.v1.AddressFromMnemonicResponse
 */
export type AddressFromMnemonicResponse = Message<"land.gno.gnonative.v1.AddressFromMnemonicResponse"> & {
  /**
   * @generated from field: bytes address = 1;
   */
  address: Uint8Array;
};

/**
 * Describes the message land.gno.gnonative.v1.AddressFromMnemonicResponse.
 * Use `create(AddressFromMnemonicResponseSchema)` to create a new message.
 */
export const AddressFromMnemonicResponseSchema: GenMessage<AddressFromMnemonicResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 68);

/**
 * @generated from message land.gno.gnonative.v1.ValidateMnemonicWordRequest
 */
export type ValidateMnemonicWordRequest = Message<"land.gno.gnonative.v1.ValidateMnemonicWordRequest"> & {
  /**
   * @generated from field: string word = 1;
   */
  word: string;
};

/**
 * Describes the message land.gno.gnonative.v1.ValidateMnemonicWordRequest.
 * Use `create(ValidateMnemonicWordRequestSchema)` to create a new message.
 */
export const ValidateMnemonicWordRequestSchema: GenMessage<ValidateMnemonicWordRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 69);

/**
 * @generated from message land.gno.gnonative.v1.ValidateMnemonicWordResponse
 */
export type ValidateMnemonicWordResponse = Message<"land.gno.gnonative.v1.ValidateMnemonicWordResponse"> & {
  /**
   * @generated from field: bool valid = 1;
   */
  valid: boolean;
};

/**
 * Describes the message land.gno.gnonative.v1.ValidateMnemonicWordResponse.
 * Use `create(ValidateMnemonicWordResponseSchema)` to create a new message.
 */
export const ValidateMnemonicWordResponseSchema: GenMessage<ValidateMnemonicWordResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 70);

/**
 * @generated from message land.gno.gnonative.v1.ValidateMnemonicPhraseRequest
 */
export type ValidateMnemonicPhraseRequest = Message<"land.gno.gnonative.v1.ValidateMnemonicPhraseRequest"> & {
  /**
   * @generated from field: string phrase = 1;
   */
  phrase: string;
};

/**
 * Describes the message land.gno.gnonative.v1.ValidateMnemonicPhraseRequest.
 * Use `create(ValidateMnemonicPhraseRequestSchema)` to create a new message.
 */
export const ValidateMnemonicPhraseRequestSchema: GenMessage<ValidateMnemonicPhraseRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 71);

/**
 * @generated from message land.gno.gnonative.v1.ValidateMnemonicPhraseResponse
 */
export type ValidateMnemonicPhraseResponse = Message<"land.gno.gnonative.v1.ValidateMnemonicPhraseResponse"> & {
  /**
   * @generated from field: bool valid = 1;
   */
  valid: boolean;
};

/**
 * Describes the message land.gno.gnonative.v1.ValidateMnemonicPhraseResponse.
 * Use `create(ValidateMnemonicPhraseResponseSchema)` to create a new message.
 */
export const ValidateMnemonicPhraseResponseSchema: GenMessage<ValidateMnemonicPhraseResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 72);

/**
 * @generated from message land.gno.gnonative.v1.HelloRequest
 */
export type HelloRequest = Message<"land.gno.gnonative.v1.HelloRequest"> & {
  /**
   * @generated from field: string name = 1 [json_name = "Name"];
   */
  name: string;
};

/**
 * Describes the message land.gno.gnonative.v1.HelloRequest.
 * Use `create(HelloRequestSchema)` to create a new message.
 */
export const HelloRequestSchema: GenMessage<HelloRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 73);

/**
 * @generated from message land.gno.gnonative.v1.HelloResponse
 */
export type HelloResponse = Message<"land.gno.gnonative.v1.HelloResponse"> & {
  /**
   * @generated from field: string greeting = 1 [json_name = "Greeting"];
   */
  greeting: string;
};

/**
 * Describes the message land.gno.gnonative.v1.HelloResponse.
 * Use `create(HelloResponseSchema)` to create a new message.
 */
export const HelloResponseSchema: GenMessage<HelloResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 74);

/**
 * @generated from message land.gno.gnonative.v1.HelloStreamRequest
 */
export type HelloStreamRequest = Message<"land.gno.gnonative.v1.HelloStreamRequest"> & {
  /**
   * @generated from field: string name = 1 [json_name = "Name"];
   */
  name: string;
};

/**
 * Describes the message land.gno.gnonative.v1.HelloStreamRequest.
 * Use `create(HelloStreamRequestSchema)` to create a new message.
 */
export const HelloStreamRequestSchema: GenMessage<HelloStreamRequest> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 75);

/**
 * @generated from message land.gno.gnonative.v1.HelloStreamResponse
 */
export type HelloStreamResponse = Message<"land.gno.gnonative.v1.HelloStreamResponse"> & {
  /**
   * @generated from field: string greeting = 1 [json_name = "Greeting"];
   */
  greeting: string;
};

/**
 * Describes the message land.gno.gnonative.v1.HelloStreamResponse.
 * Use `create(HelloStreamResponseSchema)` to create a new message.
 */
export const HelloStreamResponseSchema: GenMessage<HelloStreamResponse> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 76);

/**
 * @generated from message land.gno.gnonative.v1.GNONATIVETYPES_BytesList
 */
export type GNONATIVETYPES_BytesList = Message<"land.gno.gnonative.v1.GNONATIVETYPES_BytesList"> & {
  /**
   * @generated from field: repeated bytes Value = 1;
   */
  Value: Uint8Array[];
};

/**
 * Describes the message land.gno.gnonative.v1.GNONATIVETYPES_BytesList.
 * Use `create(GNONATIVETYPES_BytesListSchema)` to create a new message.
 */
export const GNONATIVETYPES_BytesListSchema: GenMessage<GNONATIVETYPES_BytesList> = /*@__PURE__*/
  messageDesc(file_gnonativetypes, 77);

